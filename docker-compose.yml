version: '3.7'

services:
  db:
    image: postgres:12.2-alpine
    restart: unless-stopped
    container_name: graphql-server-postgres
    ports:
      - "5432:5432"
    volumes:
      - "dbdata:/var/lib/postgresql/data"
    networks:
      - db
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust #Never use in production!
  web:
    build: .
    image: graphql-server-web:2.6.1
    container_name: graphql-server-web
    env_file:
      - env.development
    networks:
      - db
      - redis
    ports:
      - "3000:3000"
    depends_on:
      - db
  cron:
    build: .
    image: graphql-server-web:2.6.1
    container_name: graphql-server-cron
    env_file:
      - env.development
    networks:
      - db
    depends_on:
      - db
    volumes:
      - ./crontabs:/etc/crontabs:ro
    entrypoint: ["/usr/sbin/crond", "-f", "-l", "8"]
  redis:
    image: redis:5.0.8-alpine3.11
    restart: unless-stopped
    container_name: graphql-server-redis
    volumes:
      - "redisdata:/data"
    networks:
      - redis
    ports:
      - '6379:6379'
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "$REDIS_PASSWORD"]
  worker_vip:
    build: .
    image: graphql-server-web:2.6.1
    container_name: graphql-server-worker-vip
    env_file:
      - env.development
    networks:
      - db
      - redis
    depends_on:
      - db
    command: ["bundle", "exec", "sidekiq", "-q", "vip"]
  worker_plebs:
    build: .
    image: graphql-server-web:2.6.1
    container_name: graphql-server-worker-plebs
    env_file:
      - env.development
    networks:
      - db
      - redis
    depends_on:
      - db
    command: ["bundle", "exec", "sidekiq", "-q", "vip", "-q", "plebs"]
volumes:
  dbdata:
  redisdata:
networks:
  db:
  redis:
